{"version":3,"file":"commands.js","mappings":";;;;;;;;;AAAA;;;GAGG;AAEH,yCAAyC;AAEzC,MAAM,CAAC,OAAO,CAAC;IACb,6CAA6C;AAC/C,CAAC,CAAC,CAAC;AAEH;;;GAGG;AACH,SAAS,MAAM,CAAC,KAAiC;IAC/C,IAAM,OAAO,GAAsC;QACjD,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,oBAAoB;QAC1E,OAAO,EAAE,mBAAmB;QAC5B,IAAI,EAAE,YAAY;QAClB,UAAU,EAAE,IAAI;KACjB,CAAC;IAEF,8BAA8B;IAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAEjF,mEAAmE;IACnE,KAAK,CAAC,SAAS,EAAE,CAAC;AACpB,CAAC;AAED,SAAS,SAAS;IAChB,OAAO,OAAO,IAAI,KAAK,WAAW;QAChC,CAAC,CAAC,IAAI;QACN,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW;YAC/B,CAAC,CAAC,MAAM;YACR,CAAC,CAAC,OAAO,qBAAM,KAAK,WAAW;gBAC/B,CAAC,CAAC,qBAAM;gBACR,CAAC,CAAC,SAAS,CAAC;AAChB,CAAC;AAED,IAAM,CAAC,GAAG,SAAS,EAAS,CAAC;AAE7B,oEAAoE;AACpE,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;;;;;;;;UC3ClB;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;UEPD;UACA;UACA;UACA;UACA","sources":["webpack:///./src/commands/commands.ts?","webpack:///webpack/bootstrap?","webpack:///webpack/runtime/global?","webpack:///webpack/before-startup?","webpack:///webpack/startup?","webpack:///webpack/after-startup?"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal() as any;\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n","// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/commands/commands.ts\"](0, __webpack_exports__, __webpack_require__);\n",""],"names":[],"sourceRoot":""}